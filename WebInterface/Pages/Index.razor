@inherits DisposableComponent

@page "/"
@inject IJSRuntime jsRunTime
@inject IWorldCanvasContext _context 
@inject Runner runner

<div tabindex="0" @onkeydown="KeyDown">
    <div class="row align-items-center">
        <div class="col">
            <div class="container-canvas">
                <BECanvas Width="900" Height="900" @ref="_canvasReference"></BECanvas>
            </div>
        </div>
    </div>
</div>

@code {
    protected Blazor.Extensions.BECanvasComponent _canvasReference;

        protected override void OnInitialized()
        {
            Task.Run(() => runner.Run());
        }

        protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await this._context.InitializeAsync(_canvasReference);

            await jsRunTime.InvokeAsync<object>("subscribeToAnimationLoop", DotNetObjectReference.Create(this));
        }
    }

    protected async Task KeyDown(KeyboardEventArgs e)
    {
        if (e.Key == " ") await runner.ToggleRunning();
    }

    bool rendering = false;
    [JSInvokable]
    public async ValueTask RenderFrame(float timeStamp)
    {
        if (rendering) return;

        rendering = true;
        await this._context.RenderFrameAsync();
        rendering = false;
    }
}
